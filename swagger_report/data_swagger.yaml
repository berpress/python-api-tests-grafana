addPet:
  description: ''
  method: POST
  path: /pet
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: pet
createUser:
  description: This can only be done by the logged in user.
  method: POST
  path: /user
  statuses:
  - 200
  - 500
  tag: user
createUsersWithArrayInput:
  description: ''
  method: POST
  path: /user/createWithArray
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: user
createUsersWithListInput:
  description: ''
  method: POST
  path: /user/createWithList
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: user
deleteOrder:
  description: For valid response try integer IDs with positive integer value. Negative
    or non-integer values will generate API errors
  method: DELETE
  path: /store/order/{orderId}
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: store
deletePet:
  description: ''
  method: DELETE
  path: /pet/{petId}
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: pet
deleteUser:
  description: This can only be done by the logged in user.
  method: DELETE
  path: /user/{username}
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: user
findPetsByStatus:
  description: Multiple status values can be provided with comma separated strings
  method: GET
  path: /pet/findByStatus
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: pet
findPetsByTags:
  description: Multiple tags can be provided with comma separated strings. Use tag1,
    tag2, tag3 for testing.
  method: GET
  path: /pet/findByTags
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: pet
getInventory:
  description: Returns a map of status codes to quantities
  method: GET
  path: /store/inventory
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: store
getOrderById:
  description: For valid response try integer IDs with value >= 1 and <= 10. Other
    values will generated exceptions
  method: GET
  path: /store/order/{orderId}
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: store
getPetById:
  description: Returns a single pet
  method: GET
  path: /pet/{petId}
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: pet
getUserByName:
  description: ''
  method: GET
  path: /user/{username}
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: user
loginUser:
  description: ''
  method: GET
  path: /user/login
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: user
logoutUser:
  description: ''
  method: GET
  path: /user/logout
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: user
placeOrder:
  description: ''
  method: POST
  path: /store/order
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: store
updatePet:
  description: ''
  method: PUT
  path: /pet
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: pet
updatePetWithForm:
  description: ''
  method: POST
  path: /pet/{petId}
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: pet
updateUser:
  description: This can only be done by the logged in user.
  method: PUT
  path: /user/{username}
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: user
uploadFile:
  description: ''
  method: POST
  path: /pet/{petId}/uploadImage
  statuses:
  - 200
  - 400
  - 401
  - 403
  tag: pet
